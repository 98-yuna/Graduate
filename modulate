function ModData = modulate(modType,data_rand)
 switch modType
  case 'BPSK'
      ModData = bpskModulator(data_rand);
  case 'QPSK'
      ModData = qpskModulator(data_rand);
  case '8PSK'
      ModData  = psk8Modulator(data_rand);
  case '16QAM'
      ModData = qam16Modulator(data_rand);
  case '64QAM'
      ModData  = qam64Modulator(data_rand);
end
end
function y = bpskModulator(data_rand)
channel = comm.AWGNChannel();
syms = pskmod(data_rand,2); 
channelOutput = channel(syms);
y = filter(rcosdesign(0.35, 4, 8), 1, upsample(channelOutput,4));
end

function y = qpskModulator(data_rand)
channel = comm.AWGNChannel();
syms = pskmod(data_rand,4,pi/4);
channelOutput = channel(syms);
y = filter(rcosdesign(0.35, 4, 8), 1, upsample(channelOutput,4));
end

function y = psk8Modulator(data_rand)
channel = comm.AWGNChannel();
syms = pskmod(data_rand,8, pi/8);
channelOutput = channel(syms);
y = filter(rcosdesign(0.35, 4, 8), 1, upsample(channelOutput,4));
end

function y = qam16Modulator(data_rand)
channel = comm.AWGNChannel();
syms = qammod(data_rand,16);
channelOutput = channel(syms);
y = filter(rcosdesign(0.35, 4, 8), 1, upsample(channelOutput,4));
end

function y = qam64Modulator(data_rand)
channel = comm.AWGNChannel();
syms = qammod(data_rand,64);
channelOutput = channel(syms);
y = filter(rcosdesign(0.35, 4, 8), 1, upsample(channelOutput,4));
end
